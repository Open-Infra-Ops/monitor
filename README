一.性能监控基础设施架构：
exporter + prometheus + grafana


二.服务组件的介绍
(1).prometheus的使用
参考：https://www.cnblogs.com/xiao987334176/p/9930517.html
1.配置：
mkdir /opt/prometheus
cd /opt/prometheus/
vim prometheus.yml

global:
  scrape_interval:     60s
  evaluation_interval: 60s

scrape_configs:
  - job_name: prometheus
    static_configs:
      - targets: ['localhost:9090']
        labels:
          instance: prometheus

  - job_name: linux
    static_configs:
      - targets: ['192.168.91.132:9100']
        labels:
          instance: localhost

2.启动服务
docker run  -d -p 9090:9090 -v /opt/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml prom/prometheus


(2)Grafana的使用
1. 安装
mkdir /opt/grafana-storage
chmod 777 -R /opt/grafana-storage

2.启动服务
docker run -d -p 3000:3000 --name=grafana -v /opt/grafana-storage:/var/lib/grafana grafana/grafana

(3)exporter: 项目主要在metrics文件夹中:

1.ecs-->node_exporter：
1>.采集指标：cpu, 内存, 硬盘大小, 后续还有带宽？，
2>.服务处理：源码编译, 将node_exporter作出systemd服务进行托管, 适配x86、 arm。


2.k8s--cce:  需要进一步方案明确？
目前主要有以下集中方案
Heapster: 是一个集群范围的监控和数据聚合工具，以 Pod 的形式运行在集群中。除了 Kubelet/cAdvisor 之外，我们还可以向 Heapster 添加其他指标源数据比如 kube-state-metrics
cAdvisor: 是Google开源的容器资源监控和性能分析工具，它是专门为容器而生，本身也支持 Docker 容器，在 Kubernetes 中，我们不需要单独去安装，cAdvisor 作为 kubelet 内置的一部分程序可以直接使用。
Kube-state-metrics: 通过监听 API Server 生成有关资源对象的状态指标，比如 Deployment、Node、Pod，需要注意的是 kube-state-metrics 只是简单提供一个 metrics 数据，并不会存储这些指标数据，所以我们可以使用 Prometheus 来抓取这些数据然后存储。
metrics-server: 也是一个集群范围内的资源数据聚合工具，是 Heapster 的替代品，同样的，metrics-server 也只是显示数据，并不提供数据存储服务。

不过 kube-state-metrics 和 metrics-server 之间还是有很大不同的，二者的主要区别如下：
kube-state-metrics 主要关注的是业务相关的一些元数据，比如 Deployment、Pod、副本状态等; metrics-server 主要关注的是资源度量 API 的实现，比如 CPU、文件描述符、内存、请求延时等指标。

3.公网ip---带宽,这个需求也需要进一步研究。
