apiVersion: v1
kind: Namespace
metadata:
  name: infra-monitoring
  labels:
    name: infra-monitoring
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus
  namespace: infra-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRole
metadata:
  name: prometheus
rules:
  - apiGroups: [ "" ]
    resources:
      - nodes
      - nodes/proxy
      - services
      - endpoints
      - pods
    verbs: [ "get", "list", "watch" ]
  - apiGroups: [ "" ]
    resources:
      - configmaps
    verbs: [ "get" ]
  - nonResourceURLs: [ "/metrics" ]
    verbs: [ "get" ]
---
apiVersion: rbac.authorization.k8s.io/v1beta1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: infra-monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus
subjects:
  - kind: ServiceAccount
    name: prometheus
    namespace: infra-monitoring
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: infra-monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval:     10s
      evaluation_interval: 10s
      external_labels:
        cluster: zc-cluster
    
    scrape_configs:
      - job_name: 'hwstaff00223369_beijing4'
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        kubernetes_sd_configs:
          - role: node
        relabel_configs:
          - target_label: __address__
            replacement: kubernetes.default.svc:443
          - source_labels: [__meta_kubernetes_node_name]
            regex: (.+)
            replacement: /api/v1/nodes/${1}/proxy/metrics/cadvisor
            target_label: __metrics_path__
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)
          - source_labels: [__meta_kubernetes_node_name]
            action: replace
            target_label: node
          - source_labels: [__meta_kubernetes_node_label_node]
            action: replace
            target_label: node_name
    remote_write:
      - url: "http://192.168.1.115:32000/write"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: prometheus
  name: prometheus
  namespace: infra-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus
      containers:
        - name: prometheus
          image: prom/prometheus:v2.2.1
          command:
            - "/bin/prometheus"
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
            - "--storage.tsdb.path=/prometheus"
            - "--storage.tsdb.retention=1d"
          ports:
            - containerPort: 9090
              protocol: TCP
              name: http
          volumeMounts:
            - mountPath: "/etc/prometheus"
              name: prometheus-config
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: infra-monitoring
  labels:
    app: prometheus
spec:
  ports:
    - name: web
      nodePort: 31000
      port: 9090
      targetPort: http
  selector:
    app: prometheus
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: k8s-exporter
  name: k8s-exporter
  namespace: infra-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-exporter
  template:
    metadata:
      labels:
        app: k8s-exporter
    spec:
      containers:
        - name: k8s-exporter
          image: prom/k8s_exporter:v1.0.0
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 9201
              protocol: TCP
              name: http2
---
apiVersion: v1
kind: Service
metadata:
  name: k8s-exporter
  namespace: infra-monitoring
  labels:
    app: k8s-exporter
spec:
  ports:
    - name: web2
      nodePort: 32000
      port: 9201
      targetPort: 9201
  selector:
    app: k8s-exporter
  type: NodePort
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: k8s-prometheus-agent
  name: k8s-prometheus-agent
  namespace: infra-monitoring
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k8s-prometheus-agent
  template:
    metadata:
      labels:
        app: k8s-prometheus-agent
    spec:
      containers:
        - name: k8s-prometheus-agent
          image: pambrose/prometheus-agent:1.13.0
          imagePullPolicy: IfNotPresent
          env:
            - name: AGENT_CONFIG
              value: "https://raw.githubusercontent.com/Open-Infra-Ops/monitor/main/prometheus-agent/prometheus-proxy-agent.conf"
